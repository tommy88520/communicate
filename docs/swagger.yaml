definitions:
  service.FindUserByNameDto:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /user:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
      tags:
      - Index
  /user/createUser:
    post:
      parameters:
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: phone
        in: formData
        name: phone
        required: true
        type: string
      - description: email
        in: formData
        name: email
        required: true
        type: string
      - description: age
        in: formData
        name: age
        required: true
        type: string
      - description: test
        in: formData
        name: test
        required: true
        type: string
      - description: sex
        enum:
        - male
        - female
        - none
        in: formData
        name: sex
        required: true
        type: string
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      tags:
      - CreateUSer
  /user/deleteUser:
    post:
      parameters:
      - description: id
        in: formData
        name: id
        required: true
        type: string
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      tags:
      - DeleteUser
  /user/find-user-by-name-pwd:
    post:
      parameters:
      - description: FindUserByNameDto object
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/service.FindUserByNameDto'
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      tags:
      - FindUserByNameAndPwd
  /user/getUserData:
    get:
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      tags:
      - GetUserData
  /user/search-friend:
    get:
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      tags:
      - SearchFriend
  /user/updateUser:
    patch:
      parameters:
      - description: id
        in: formData
        name: id
        required: true
        type: string
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: phone
        in: formData
        name: phone
        required: true
        type: string
      - description: email
        in: formData
        name: email
        required: true
        type: string
      responses:
        "200":
          description: code","message"}
          schema:
            type: string
      tags:
      - UpdateUser
swagger: "2.0"
